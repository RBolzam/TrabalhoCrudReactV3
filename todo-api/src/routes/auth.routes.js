const express = require('express');
// Importa os controladores de autentica√ß√£o (register, login) e opera√ß√µes de usu√°rio
const { register, login } = require('../controllers/auth.controller');
const router = express.Router();
// Importa o middleware de autentica√ß√£o JWT
const auth = require('../middleware/auth'); 
// Importa fun√ß√µes adicionais do controlador de usu√°rios
const { listUsers, updateUser, deleteUser } = require('../controllers/auth.controller');

// Rota p√∫blica para registro de novos usu√°rios (n√£o requer autentica√ß√£o)
router.post('/register', register);

// Rota p√∫blica para login (gera token JWT)
router.post('/login', login); 

// üîí Aplica middleware de autentica√ß√£o em TODAS as rotas abaixo deste ponto
// Qualquer requisi√ß√£o abaixo desta linha exigir√° um token JWT v√°lido
router.use(auth);

// ROTAS PROTEGIDAS (requerem autentica√ß√£o):

// Rota GET para listar todos os usu√°rios (apenas para autenticados)
router.get('/users', listUsers);

// Rota PUT para atualizar um usu√°rio espec√≠fico por ID
router.put('/users/:id', updateUser); 

// Rota DELETE para remover um usu√°rio espec√≠fico por ID
router.delete('/users/:id', deleteUser);

// Exporta o roteador configurado
module.exports = router;