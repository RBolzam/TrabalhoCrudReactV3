{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafab\\\\Downloads\\\\Estudo\\\\FemaV3\\\\Ano3\\\\TopTec\\\\TrabalhoCrudReactV2\\\\todo-frontend\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\nimport api from '../api'; // Importa a instância do Axios configurada\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  var _location$state, _location$state$from;\n  // Estados para gerenciar os dados do formulário e interface\n  const [email, setEmail] = useState(''); // Armazena o email digitado\n  const [password, setPassword] = useState(''); // Armazena a senha digitada\n  const [errorMsg, setErrorMsg] = useState(''); // Armazena mensagens de erro\n  const [showPass, setShowPass] = useState(false); // Controla a visibilidade da senha\n\n  // Hooks para navegação e acesso à localização atual\n  const nav = useNavigate(); // Permite navegação programática\n  const location = useLocation(); // Acessa informações da rota atual\n\n  // Recupera a localização anterior para redirecionamento pós-login\n  // Se existir state.from, usa o pathname, senão redireciona para raiz ('/')\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || '/';\n\n  // Função para lidar com o envio do formulário\n  const handleSubmit = async e => {\n    e.preventDefault(); // Previne recarregamento da página\n\n    try {\n      // Envia credenciais para a API de login\n      const {\n        data\n      } = await api.post('/auth/login', {\n        email,\n        password\n      });\n\n      // Armazena o token JWT no localStorage do navegador\n      localStorage.setItem('token', data.token);\n\n      // Redireciona para a rota de origem (ou raiz) substituindo histórico\n      nav(from, {\n        replace: true\n      });\n    } catch (err) {\n      console.error(err); // Log de erro para desenvolvimento\n      setErrorMsg('Email ou senha incorretos.'); // Feedback ao usuário\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    style: {\n      maxWidth: 400\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-3\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control mb-2\",\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true // Campo obrigatório\n        ,\n        autoFocus: true // Foco automático ao carregar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control mb-2\",\n        type: showPass ? \"text\" : \"password\" // Alterna entre texto e password\n        ,\n        placeholder: \"Senha\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true // Campo obrigatório\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          id: \"showPassword\",\n          checked: showPass,\n          onChange: () => setShowPass(!showPass) // Alterna estado de visibilidade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: \"showPassword\",\n          children: \"Mostrar senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary w-100\",\n        type: \"submit\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"N\\xE3o tem conta? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Registre-se aqui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"mQZBPUAjzaebs1S7QTaxzYoT8k0=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","useLocation","Link","api","jsxDEV","_jsxDEV","Login","_s","_location$state","_location$state$from","email","setEmail","password","setPassword","errorMsg","setErrorMsg","showPass","setShowPass","nav","location","from","state","pathname","handleSubmit","e","preventDefault","data","post","localStorage","setItem","token","replace","err","console","error","className","style","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onSubmit","type","placeholder","value","onChange","target","required","autoFocus","id","checked","htmlFor","to","_c","$RefreshReg$"],"sources":["C:/Users/Rafab/Downloads/Estudo/FemaV3/Ano3/TopTec/TrabalhoCrudReactV2/todo-frontend/src/pages/Login.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\r\nimport api from '../api'; // Importa a instância do Axios configurada\r\n\r\nexport default function Login() {\r\n  // Estados para gerenciar os dados do formulário e interface\r\n  const [email, setEmail] = useState(''); // Armazena o email digitado\r\n  const [password, setPassword] = useState(''); // Armazena a senha digitada\r\n  const [errorMsg, setErrorMsg] = useState(''); // Armazena mensagens de erro\r\n  const [showPass, setShowPass] = useState(false); // Controla a visibilidade da senha\r\n  \r\n  // Hooks para navegação e acesso à localização atual\r\n  const nav = useNavigate(); // Permite navegação programática\r\n  const location = useLocation(); // Acessa informações da rota atual\r\n  \r\n  // Recupera a localização anterior para redirecionamento pós-login\r\n  // Se existir state.from, usa o pathname, senão redireciona para raiz ('/')\r\n  const from = location.state?.from?.pathname || '/';\r\n\r\n  // Função para lidar com o envio do formulário\r\n  const handleSubmit = async e => {\r\n    e.preventDefault(); // Previne recarregamento da página\r\n    \r\n    try {\r\n      // Envia credenciais para a API de login\r\n      const { data } = await api.post('/auth/login', { email, password });\r\n      \r\n      // Armazena o token JWT no localStorage do navegador\r\n      localStorage.setItem('token', data.token);\r\n      \r\n      // Redireciona para a rota de origem (ou raiz) substituindo histórico\r\n      nav(from, { replace: true });\r\n      \r\n    } catch (err) {\r\n      console.error(err); // Log de erro para desenvolvimento\r\n      setErrorMsg('Email ou senha incorretos.'); // Feedback ao usuário\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\" style={{ maxWidth: 400 }}>\r\n      <h2 className=\"mb-3\">Login</h2>\r\n\r\n      {/* Exibe mensagem de erro se existir */}\r\n      {errorMsg && (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {errorMsg}\r\n        </div>\r\n      )}\r\n\r\n      {/* Formulário de login */}\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Campo de email */}\r\n        <input\r\n          className=\"form-control mb-2\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          required // Campo obrigatório\r\n          autoFocus // Foco automático ao carregar\r\n        />\r\n        \r\n        {/* Campo de senha com toggle de visibilidade */}\r\n        <input\r\n          className=\"form-control mb-2\"\r\n          type={showPass ? \"text\" : \"password\"} // Alterna entre texto e password\r\n          placeholder=\"Senha\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          required // Campo obrigatório\r\n        />\r\n        \r\n        {/* Checkbox para mostrar/ocultar senha */}\r\n        <div className=\"form-check mb-3\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            id=\"showPassword\"\r\n            checked={showPass}\r\n            onChange={() => setShowPass(!showPass)} // Alterna estado de visibilidade\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"showPassword\">\r\n            Mostrar senha\r\n          </label>\r\n        </div>\r\n        \r\n        {/* Botão de submissão */}\r\n        <button className=\"btn btn-primary w-100\" type=\"submit\">\r\n          Entrar\r\n        </button>\r\n      </form>\r\n\r\n      {/* Link para página de registro */}\r\n      <div className=\"text-center mt-3\">\r\n        <span>Não tem conta? </span>\r\n        <Link to=\"/register\">Registre-se aqui</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}