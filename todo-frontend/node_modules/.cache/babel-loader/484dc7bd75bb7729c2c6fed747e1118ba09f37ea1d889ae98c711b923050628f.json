{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafab\\\\Downloads\\\\Estudo\\\\FemaV3\\\\Ano3\\\\TopTec\\\\TrabalhoCrudReactV2\\\\todo-frontend\\\\src\\\\components\\\\RequireAuth.jsx\",\n  _s = $RefreshSig$();\nimport { Navigate, useLocation } from 'react-router-dom';\n\n// Componente de proteção de rotas que verifica autenticação\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RequireAuth({\n  children\n}) {\n  _s();\n  // 1. Verifica se existe um token JWT no armazenamento local\n  const token = localStorage.getItem('token');\n\n  // 2. Obtém a localização atual da rota\n  const location = useLocation();\n\n  // 3. Verifica se o usuário NÃO está autenticado\n  if (!token) {\n    // 4. Redireciona para a página de login mantendo o histórico de navegação\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location // Passa a localização atual para poder voltar após login\n      },\n      replace: true // Substitui a entrada no histórico de navegação\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 5. Se autenticado, renderiza os componentes filhos (rotas protegidas)\n  return children;\n}\n_s(RequireAuth, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = RequireAuth;\nvar _c;\n$RefreshReg$(_c, \"RequireAuth\");","map":{"version":3,"names":["Navigate","useLocation","jsxDEV","_jsxDEV","RequireAuth","children","_s","token","localStorage","getItem","location","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rafab/Downloads/Estudo/FemaV3/Ano3/TopTec/TrabalhoCrudReactV2/todo-frontend/src/components/RequireAuth.jsx"],"sourcesContent":["import { Navigate, useLocation } from 'react-router-dom';\r\n\r\n// Componente de proteção de rotas que verifica autenticação\r\nexport default function RequireAuth({ children }) {\r\n  // 1. Verifica se existe um token JWT no armazenamento local\r\n  const token = localStorage.getItem('token');\r\n  \r\n  // 2. Obtém a localização atual da rota\r\n  const location = useLocation();\r\n\r\n  // 3. Verifica se o usuário NÃO está autenticado\r\n  if (!token) {\r\n    // 4. Redireciona para a página de login mantendo o histórico de navegação\r\n    return (\r\n      <Navigate \r\n        to=\"/login\" \r\n        state={{ \r\n          from: location  // Passa a localização atual para poder voltar após login\r\n        }} \r\n        replace  // Substitui a entrada no histórico de navegação\r\n      />\r\n    );\r\n  }\r\n\r\n  // 5. Se autenticado, renderiza os componentes filhos (rotas protegidas)\r\n  return children;\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChD;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAI,CAACM,KAAK,EAAE;IACV;IACA,oBACEJ,OAAA,CAACH,QAAQ;MACPW,EAAE,EAAC,QAAQ;MACXC,KAAK,EAAE;QACLC,IAAI,EAAEH,QAAQ,CAAE;MAClB,CAAE;MACFI,OAAO,OAAE;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEN;;EAEA;EACA,OAAOb,QAAQ;AACjB;AAACC,EAAA,CAvBuBF,WAAW;EAAA,QAKhBH,WAAW;AAAA;AAAAkB,EAAA,GALNf,WAAW;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}