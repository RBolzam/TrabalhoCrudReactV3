{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafab\\\\Downloads\\\\Estudo\\\\FemaV3\\\\Ano3\\\\TopTec\\\\TrabalhoCrudReactV2\\\\todo-frontend\\\\src\\\\pages\\\\Account.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../api'; // Importa a instância do Axios configurada\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Account() {\n  _s();\n  // Estados para gerenciar os dados do usuário e formulário\n  const [user, setUser] = useState({}); // Armazena dados completos do usuário\n  const [email, setEmail] = useState(''); // Armazena email para edição\n  const [password, setPassword] = useState(''); // Armazena nova senha\n  const nav = useNavigate(); // Hook para navegação programática\n\n  // Efeito para carregar os dados do usuário ao montar o componente\n  useEffect(() => {\n    api.get('/auth/users').then(res => {\n      // Decodifica o token JWT para obter o ID do usuário logado\n      const decoded = parseJwt(localStorage.getItem('token'));\n\n      // Encontra o usuário atual na lista de usuários\n      const me = res.data.find(u => u.id === decoded.userId);\n\n      // Atualiza os estados com os dados do usuário\n      setUser(me);\n      setEmail(me.email);\n    });\n  }, []); // Array vazio garante que executa apenas uma vez\n\n  // Função para atualizar os dados da conta\n  const handleUpdate = async () => {\n    // Envia requisição para atualizar email e/ou senha\n    await api.put(`/auth/users/${user.id}`, {\n      email,\n      password\n    });\n    // Feedback visual de sucesso\n    alert('Conta atualizada!');\n  };\n\n  // Função para excluir a conta permanentemente\n  const handleDelete = async () => {\n    // Confirmação explícita antes da exclusão permanente\n    if (window.confirm('Tem certeza que deseja excluir sua conta?')) {\n      // Requisição para deletar o usuário no backend\n      await api.delete(`/auth/users/${user.id}`);\n\n      // Remove o token de autenticação do armazenamento local\n      localStorage.removeItem('token');\n\n      // Feedback e redirecionamento para registro\n      alert('Conta deletada!');\n      nav('/register'); // Redireciona para página de registro\n    }\n  };\n\n  // Função para logout sem excluir a conta\n  const handleLogout = () => {\n    // Remove o token de autenticação mas mantém a conta\n    localStorage.removeItem('token');\n    // Redireciona para página de login\n    nav('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    style: {\n      maxWidth: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Minha Conta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nova senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"Deixe em branco para manter a atual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary me-2\",\n      onClick: handleUpdate,\n      children: \"Salvar altera\\xE7\\xF5es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger me-2\",\n      onClick: handleDelete,\n      children: \"Excluir conta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => nav('/'),\n        children: \"\\u2190 Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: handleLogout,\n        children: \"Sair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n// Função auxiliar para decodificar tokens JWT\n_s(Account, \"a1eWYY3y3Fmj+l90yNKnSMSXd9E=\", false, function () {\n  return [useNavigate];\n});\n_c = Account;\nfunction parseJwt(token) {\n  try {\n    // Decodifica a parte do payload do token (base64)\n    // 1. Divide o token em partes [header, payload, signature]\n    // 2. Pega a parte do payload (índice 1)\n    // 3. Decodifica de base64 para string\n    // 4. Converte a string JSON para objeto JavaScript\n    return JSON.parse(atob(token.split('.')[1]));\n  } catch {\n    // Retorna objeto vazio em caso de erro:\n    // - Token malformado\n    // - Problema na decodificação\n    return {};\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["useState","useEffect","useNavigate","api","jsxDEV","_jsxDEV","Account","_s","user","setUser","email","setEmail","password","setPassword","nav","get","then","res","decoded","parseJwt","localStorage","getItem","me","data","find","u","id","userId","handleUpdate","put","alert","handleDelete","window","confirm","delete","removeItem","handleLogout","className","style","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","onClick","_c","token","JSON","parse","atob","split","$RefreshReg$"],"sources":["C:/Users/Rafab/Downloads/Estudo/FemaV3/Ano3/TopTec/TrabalhoCrudReactV2/todo-frontend/src/pages/Account.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../api'; // Importa a instância do Axios configurada\r\n\r\nexport default function Account() {\r\n  // Estados para gerenciar os dados do usuário e formulário\r\n  const [user, setUser] = useState({}); // Armazena dados completos do usuário\r\n  const [email, setEmail] = useState(''); // Armazena email para edição\r\n  const [password, setPassword] = useState(''); // Armazena nova senha\r\n  const nav = useNavigate(); // Hook para navegação programática\r\n\r\n  // Efeito para carregar os dados do usuário ao montar o componente\r\n  useEffect(() => {\r\n    api.get('/auth/users')\r\n      .then(res => {\r\n        // Decodifica o token JWT para obter o ID do usuário logado\r\n        const decoded = parseJwt(localStorage.getItem('token'));\r\n        \r\n        // Encontra o usuário atual na lista de usuários\r\n        const me = res.data.find(u => u.id === decoded.userId);\r\n        \r\n        // Atualiza os estados com os dados do usuário\r\n        setUser(me);\r\n        setEmail(me.email);\r\n      });\r\n  }, []); // Array vazio garante que executa apenas uma vez\r\n\r\n  // Função para atualizar os dados da conta\r\n  const handleUpdate = async () => {\r\n    // Envia requisição para atualizar email e/ou senha\r\n    await api.put(`/auth/users/${user.id}`, { email, password });\r\n    // Feedback visual de sucesso\r\n    alert('Conta atualizada!');\r\n  };\r\n\r\n  // Função para excluir a conta permanentemente\r\n  const handleDelete = async () => {\r\n    // Confirmação explícita antes da exclusão permanente\r\n    if (window.confirm('Tem certeza que deseja excluir sua conta?')) {\r\n      // Requisição para deletar o usuário no backend\r\n      await api.delete(`/auth/users/${user.id}`);\r\n      \r\n      // Remove o token de autenticação do armazenamento local\r\n      localStorage.removeItem('token');\r\n      \r\n      // Feedback e redirecionamento para registro\r\n      alert('Conta deletada!');\r\n      nav('/register'); // Redireciona para página de registro\r\n    }\r\n  };\r\n\r\n  // Função para logout sem excluir a conta\r\n  const handleLogout = () => {\r\n    // Remove o token de autenticação mas mantém a conta\r\n    localStorage.removeItem('token');\r\n    // Redireciona para página de login\r\n    nav('/login'); \r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\" style={{ maxWidth: 500 }}>\r\n      <h2>Minha Conta</h2>\r\n      \r\n      {/* Seção de edição de email */}\r\n      <div className=\"mb-2\">\r\n        <label>Email</label>\r\n        <input \r\n          className=\"form-control\" \r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)} \r\n        />\r\n      </div>\r\n      \r\n      {/* Seção para alteração de senha */}\r\n      <div className=\"mb-2\">\r\n        <label>Nova senha</label>\r\n        <input \r\n          className=\"form-control\" \r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)} \r\n          type=\"password\" \r\n          placeholder=\"Deixe em branco para manter a atual\"\r\n        />\r\n      </div>\r\n      \r\n      {/* Grupo de botões para ações principais */}\r\n      <button className=\"btn btn-primary me-2\" onClick={handleUpdate}>\r\n        Salvar alterações\r\n      </button>\r\n      <button className=\"btn btn-danger me-2\" onClick={handleDelete}>\r\n        Excluir conta\r\n      </button>\r\n\r\n      <hr /> {/* Divisor visual */}\r\n      \r\n      {/* Rodapé com navegação secundária */}\r\n      <div className=\"d-flex justify-content-between\">\r\n        {/* Botão para voltar à página inicial */}\r\n        <button className=\"btn btn-secondary\" onClick={() => nav('/')}>\r\n          ← Voltar\r\n        </button>\r\n        \r\n        {/* Botão para logout da aplicação */}\r\n        <button className=\"btn btn-warning\" onClick={handleLogout}>\r\n          Sair\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Função auxiliar para decodificar tokens JWT\r\nfunction parseJwt(token) {\r\n  try {\r\n    // Decodifica a parte do payload do token (base64)\r\n    // 1. Divide o token em partes [header, payload, signature]\r\n    // 2. Pega a parte do payload (índice 1)\r\n    // 3. Decodifica de base64 para string\r\n    // 4. Converte a string JSON para objeto JavaScript\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  } catch {\r\n    // Retorna objeto vazio em caso de erro:\r\n    // - Token malformado\r\n    // - Problema na decodificação\r\n    return {};\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}